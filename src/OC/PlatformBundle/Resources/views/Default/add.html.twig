<html>
<head>
    <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css">

    <title> Ajoutter votre annonce</title>
    {# src/OC/PlatformBundle/Resources/views/Advert/form.html.twig #}



</head>
<body>
{# src/OC/PlatformBundle/Resources/views/Advert/form.html.twig #}

{#j'ai defini mon propre style car j'ai un proleme avec la mise à jour de mon composer pour avoir le bootstrap#}
<div class="well" style="background-color: #cbcbcb; margin:auto 20%; padding:2% 10%; max-width:60%  ">
    <h3>Ajouter votre annonce svp:</h3>

    {{ form_start(form, {'attr': {'class': 'form-horizontal'}}) }}

    {# Les erreurs générales du formulaire. #}
    {{ form_errors(form) }}

    <div class="form-group">
        {# Génération du label. #}
        {{ form_label(form.title, "Titre de l'annonce", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}

        {# Affichage des erreurs pour ce champ précis. #}
        {{ form_errors(form.title) }}

        <div class="col-sm-4">
            {# Génération de l'input. #}
            {{ form_widget(form.title, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>

    {# Idem pour un autre champ. #}
    <div class="form-group" >
        {{ form_label(form.content, "Contenu de l'annonce", {'label_attr': {'class': 'col-sm-3 control-label'}}) }}
        {{ form_errors(form.title) }}
        <div class="col-sm-4">
            {{ form_widget(form.content, {'attr': {'class': 'form-control'}}) }}
        </div>
    </div>

    {# Génération du label + error + widget pour un champ #}
    {{ form_row(form.date) }}

    {{ form_row(form.author) }}
    {{ form_row(form.published) }}
    <div style="background-color: antiquewhite; margin:3% auto; padding:2% 10%;">
        <h4>Votre image</h4>
        {{ form_row(form.image.url) }}
        {{ form_row(form.image.alt) }}
        </div>


    {# Génération automatique des champs pas encore écrits.
       Dans cet exemple, ce serait le champ CSRF (géré automatiquement par Symfony !)
       et tous les champs cachés (type « hidden »). #}
    <div style="background-color: antiquewhite; margin:3% auto; padding:2% 10%;">
    {{ form_rest(form) }}
    </div>
    {# Pour le bouton, pas de label ni d'erreur, on affiche juste le widget #}
    {{ form_widget(form.save, {'attr': {'class': 'btn btn-primary'}}) }}


    {# Fermeture de la balise <form> du formulaire HTML #}
    {{ form_end(form) }}
</div>

{# On charge la bibliothèque jQuery. Ici, je la prends depuis le CDN google
       mais si vous l'avez en local, changez simplement l'adresse. #}
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
{# <script src="../../../../../jquery-2.2.0"></script>#}
{# Voici le script en question : #}
<script type="text/javascript">
    $(document).ready(function() {
        // On récupère la balise <div> en question qui contient l'attribut « data-prototype » qui nous intéresse.
        var $container = $('div#oc_platformbundle_advert_categories');

        // On ajoute un lien pour ajouter une nouvelle catégorie
        var $addLink = $('<a href="#" id="add_category" class="btn btn-default">Ajouter une catégorie</a>');
        $container.append($addLink);

        // On ajoute un nouveau champ à chaque clic sur le lien d'ajout.
        $addLink.click(function(e) {
            addCategory($container);
            e.preventDefault(); // évite qu'un # apparaisse dans l'URL
            return false;
        });

        // On définit un compteur unique pour nommer les champs qu'on va ajouter dynamiquement
        var index = $container.find(':input').length;

        // On ajoute un premier champ automatiquement s'il n'en existe pas déjà un (cas d'une nouvelle annonce par exemple).
        if (index == 0) {
            addCategory($container);
        } else {
            // Pour chaque catégorie déjà existante, on ajoute un lien de suppression
            $container.children('div').each(function() {
                addDeleteLink($(this));
            });
        }

        // La fonction qui ajoute un formulaire Categorie
        function addCategory($container) {
            // Dans le contenu de l'attribut « data-prototype », on remplace :
            // - le texte "__name__label__" qu'il contient par le label du champ
            // - le texte "__name__" qu'il contient par le numéro du champ
            var $prototype = $($container.attr('data-prototype').replace(/__name__label__/g, 'Catégorie n°' + (index+1))
                    .replace(/__name__/g, index));

            // On ajoute au prototype un lien pour pouvoir supprimer la catégorie
            addDeleteLink($prototype);

            // On ajoute le prototype modifié à la fin de la balise <div>
            $container.append($prototype);

            // Enfin, on incrémente le compteur pour que le prochain ajout se fasse avec un autre numéro
            index++;
        }

        // La fonction qui ajoute un lien de suppression d'une catégorie
        function addDeleteLink($prototype) {
            // Création du lien
            $deleteLink = $('<a href="#" class="btn btn-danger">Supprimer</a>');

            // Ajout du lien
            $prototype.append($deleteLink);

            // Ajout du listener sur le clic du lien
            $deleteLink.click(function(e) {
                $prototype.remove();
                e.preventDefault(); // évite qu'un # apparaisse dans l'URL
                return false;
            });
        }
    });
</script>


</body>

</html>